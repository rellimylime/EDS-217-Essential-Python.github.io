---
title: "Day 3: ðŸ™Œ Coding Colab"
subtitle: "Working with Series"
---

## Introduction

In this collaborative coding exercise, we'll explore Pandas Series, a fundamental data structure in the Pandas library. You'll work together to create, manipulate, and analyze Series objects.

## Resources

Here's our course cheatsheet on pandas `Series`:

- [Pandas Series Cheatsheet](../cheatsheets/pandas_series.qmd)

Feel free to refer to this cheatsheet throughout the exercise if you need a quick reminder about syntax or functionality.

## Setup

First, let's import the necessary libraries and create a sample Series.

```{python}
import pandas as pd
import numpy as np

# Create a sample Series
fruits = pd.Series(['apple', 'banana', 'cherry', 'date', 'elderberry'], name='Fruits')
print(fruits)
```

## Exercise 1: Creating a Series

Work together to create a Series representing the prices of the fruits in our `fruits` Series.

```{python}
#| echo: false
#| include: false

# Instructor's sample solution
prices = pd.Series([0.5, 0.3, 1.0, 1.5, 2.0], index=fruits.values, name='Prices')
print(prices)
```

```{python}
# Your code here
# Create a Series called 'prices' with the same index as 'fruits'
# Use these prices: apple: $0.5, banana: $0.3, cherry: $1.0, date: $1.5, elderberry: $2.0

```

## Exercise 2: Finding Maximum and Minimum Values

Collaborate to explore Series indexing methods:

1. Find the most expensive fruit using `.idxmax()`
2. Find the least expensive fruit using `.idxmin()`  
3. Calculate the total price of all fruits using `.sum()`

:::{.callout-tip}
- `.idxmax()` returns the **index** (name) of the maximum value
- `.idxmin()` returns the **index** (name) of the minimum value
- `.max()` and `.min()` return the **values** themselves
:::

```{python}
#| echo: false
#| include: false

# Instructor's sample solution
most_expensive = prices.idxmax()
least_expensive = prices.idxmin()
total_price = prices.sum()

print(f"Most expensive fruit: {most_expensive}")
print(f"Least expensive fruit: {least_expensive}")
print(f"Total price: ${total_price:.2f}")
```

```{python}
# Your code here
# 1. Find the most expensive fruit using .idxmax()
# 2. Find the least expensive fruit using .idxmin()
# 3. Calculate the total price using .sum()

```

## Exercise 3: Basic Series Analysis

Work as a team to practice basic Series methods:

1. What is the average price of the fruits? (use `.mean()`)
2. What is the price range? Calculate: maximum price minus minimum price

:::{.callout-tip}
Use `.max()` and `.min()` to get the actual price values, then subtract them.
:::

```{python}
#| echo: false
#| include: false

# Instructor's sample solution
average_price = prices.mean()
price_range = prices.max() - prices.min()

print(f"Average price: ${average_price:.2f}")
print(f"Price range: ${price_range:.2f}")
```

```{python}
# Your code here
# 1. Calculate the average price using .mean()
# 2. Calculate the price range (max - min)

```

## Conclusion

In this collaborative exercise, you've practiced creating, manipulating, and analyzing Pandas Series. You've learned how to perform basic operations, apply conditions, and modify Series objects. These skills will be valuable as you work with more complex datasets in the future.

## Discussion Questions

1. What advantages does using a Pandas Series offer compared to using a Python list or dictionary?
2. Can you think of a real-world scenario where you might use a Pandas Series instead of a DataFrame?
3. What challenges did you face while working with Series in this exercise, and how did you overcome them?

Discuss these questions with your team and share your insights.

::: {.center-text .body-text-xl .teal-text}
End Coding Colab Session (Day 4)
:::

