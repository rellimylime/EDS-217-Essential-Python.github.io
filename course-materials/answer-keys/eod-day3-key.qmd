---
title: "Day 3: Answer Key"
subtitle: "Using Pandas Series for Data Analysis"
search: false
jupyter: eds217_2025
format: 
    html:
        toc: true
        toc-depth: 3
        code-fold: true
---

::: {style="width: 80%; margin: auto;"}
![](https://cdn.midjourney.com/582b868e-dd7f-45ba-974f-9761288decdb/0_1.jpeg)
:::
:::{.gray-text .center-text}
*A cartoon panda looking over a year's worth of monthly class exams. The panda is doing great; A+!* (Midjourney5)[https://www.midjourney.com/jobs/6b63c3ca-c64d-41b8-a791-7e4b2594c781?index=0]
:::


## Introduction

This answer key provides solutions for the Day 3 end-of-day activity, which focuses on applying control flows and Pandas Series operations to analyze student test score data.

## Setup

### Task 0.1: Import Libraries

```{python}
#| echo: true
#| include: true

import pandas as pd
import numpy as np
```

## Part 1: Creating and Analyzing Test Scores

### Task 1.1: Create the Test Scores Series

```{python}
#| echo: true
#| include: true

# Monthly test scores (September through June)
scores_data = [78, 85, 92, 88, 79, 83, 91, 87, 89, 94]
months = ['Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']

# Create the Series
scores = pd.Series(scores_data, index=months)
print("Monthly Test Scores:")
print(scores)
```


### Task 1.2: Basic Statistical Analysis

```{python}
#| echo: true
#| include: true

# Calculate statistics using Series methods
average_score = scores.mean()
highest_score = scores.max()
lowest_score = scores.min()
median_score = scores.median()

print(f"Average score: {average_score:.2f}")
print(f"Highest score: {highest_score}")
print(f"Lowest score: {lowest_score}")
print(f"Median score: {median_score:.2f}")
```

## Part 2: Applying Control Flows

### Task 3: Performance Categories

```{python}
#| echo: true
#| include: true

# Categorize performance based on average score
if average_score >= 90:
    performance = "Excellent"
elif average_score >= 80:
    performance = "Good"
elif average_score >= 70:
    performance = "Satisfactory"
else:
    performance = "Needs Improvement"

print(f"Overall performance: {performance} (Average: {average_score:.2f})")
```

### Task 4: Finding Best and Worst Months

```{python}
#| echo: true
#| include: true

best_month = scores.idxmax()
worst_month = scores.idxmin()
best_score = scores.max()
worst_score = scores.min()

print(f"Best month: {best_month} ({best_score} points)")
print(f"Worst month: {worst_month} ({worst_score} points)")
```

## Conclusion

Excellent work! In just four focused tasks, you practiced the key concepts from Day 3:

✅ **Pandas Series Fundamentals**:
- Created a Series with custom indices
- Used statistical methods (`.mean()`, `.max()`, `.min()`, `.median()`)
- Applied Series indexing methods (`.idxmax()`, `.idxmin()`)

✅ **Control Flow Application**:
- Used `if`/`elif`/`else` statements for data categorization
- Combined conditional logic with data analysis

These core skills form the foundation for more advanced data analysis!


::: {.center-text .body-text-xl .teal-text}
End Activity Session (Day 3)
:::





