---
title: "EDS 217 Cheatsheet"
subtitle: "Customizing Plots with Matplotlib and Seaborn"
jupyter: eds217_2025
format:
    html:
        toc: true
        toc-depth: 3
        code-fold: show
---

## Matplotlib Customization

### Basic Plot Setup

```{python}
#| echo: true
import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 10, 100)
y = np.sin(x)

plt.figure(figsize=(10, 6))
plt.plot(x, y)
plt.show()
```

### Customizing Line Plots

```{python}
#| echo: true
plt.figure(figsize=(10, 6))
plt.plot(x, y, color='red', linestyle='--', linewidth=2, marker='o', markersize=5)
plt.title('Customized Line Plot', fontsize=16)
plt.xlabel('X-axis', fontsize=12)
plt.ylabel('Y-axis', fontsize=12)
plt.grid(True, linestyle=':')
plt.show()
```

### Adjusting Axes

```{python}
#| echo: true
plt.figure(figsize=(10, 6))
plt.plot(x, y)
plt.xlim(0, 5)
plt.ylim(-1.5, 1.5)
plt.xticks(np.arange(0, 6, 1))
plt.yticks(np.arange(-1.5, 1.6, 0.5))
plt.show()
```

### Adding Legend

```{python}
#| echo: true
plt.figure(figsize=(10, 6))
plt.plot(x, np.sin(x), label='sin(x)')
plt.plot(x, np.cos(x), label='cos(x)')
plt.legend(fontsize=12, loc='upper right')
plt.show()
```

### Customizing Text and Annotations

```{python}
#| echo: true
plt.figure(figsize=(10, 6))
plt.plot(x, y)
plt.title('Sine Wave', fontsize=16, fontweight='bold')
plt.text(5, 0.5, 'Peak', fontsize=14, color='red')
plt.annotate('Trough', xy=(3*np.pi/2, -1), xytext=(6, -0.5),
             arrowprops=dict(facecolor='black', shrink=0.05))
plt.show()
```

## Seaborn Customization

### Setting the Style

```{python}
#| echo: true
import seaborn as sns
import pandas as pd

sns.set_style("whitegrid")
sns.set_palette("deep")
```

### Loading and Preparing Data

```{python}
#| echo: true
# Load the tips dataset
tips = sns.load_dataset("tips")

# Display the first few rows and data types
print(tips.head())
print("\nData Types:")
print(tips.dtypes)

# Select only numeric columns for correlation
numeric_columns = tips.select_dtypes(include=[np.number]).columns
tips_numeric = tips[numeric_columns]
```

### Customizing a Scatter Plot

```{python}
#| echo: true
plt.figure(figsize=(10, 6))
sns.scatterplot(data=tips, x="total_bill", y="tip", hue="time", size="size")
plt.title("Tips vs Total Bill", fontsize=16)
plt.show()
```

### Customizing a Box Plot

```{python}
#| echo: true
plt.figure(figsize=(10, 6))
sns.boxplot(data=tips, x="day", y="total_bill", palette="Set3")
plt.title("Total Bill by Day", fontsize=16)
plt.show()
```

### Customizing a Heatmap (Correlation of Numeric Columns)

```{python}
#| echo: true
corr = tips_numeric.corr()
plt.figure(figsize=(8, 6))
sns.heatmap(corr, annot=True, cmap="coolwarm", linewidths=0.5)
plt.title("Correlation Heatmap of Numeric Columns", fontsize=16)
plt.show()
```

### Customizing a Pair Plot

```{python}
#| echo: true
sns.pairplot(tips, hue="time", palette="husl", height=2.5, 
             vars=["total_bill", "tip", "size"])
plt.suptitle("Pair Plot of Tips Dataset", y=1.02, fontsize=16)
plt.show()
```

### Customizing a Regression Plot

```{python}
#| echo: true
plt.figure(figsize=(10, 6))
sns.regplot(data=tips, x="total_bill", y="tip", scatter_kws={"color": "blue"}, line_kws={"color": "red"})
plt.title("Regression Plot: Tip vs Total Bill", fontsize=16)
plt.show()
```

### Customizing a Categorical Plot

```{python}
#| echo: true
plt.figure(figsize=(12, 6))
sns.catplot(data=tips, x="day", y="total_bill", hue="sex", kind="violin", split=True)
plt.title("Distribution of Total Bill by Day and Sex", fontsize=16)
plt.show()
```

Remember, you can always combine Matplotlib and Seaborn customizations for even more control over your visualizations!